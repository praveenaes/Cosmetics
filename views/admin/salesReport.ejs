 <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">

  <style>
    body {
      background-color: #f8f9fa;
    }
    #salesReport {
      background-color: white;
      padding: 30px;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }
    h2, h4 {
      font-weight: bold;
    }
    table th, table td {
      vertical-align: middle !important;
      page-break-inside: avoid;
    }
    .button-container {
        text-align: center;
        margin: 30px 0;
    }
    .download-btn {
        background-color: #4caf50;
        color: white;
        padding: 12px 24px;
        font-size: 16px;
        border: none;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    .download-btn:hover {
        background-color: #45a049;
    }
    td, th {
      word-break: break-word;
      white-space: normal;
    }
    td.order-id {
      max-width: 150px;
      word-break: break-all;
      white-space: normal;
    }
    table {
      table-layout: fixed;
      width: 100%;
      border-collapse: collapse;
    }
    tr {
      page-break-inside: avoid;
      page-break-after: auto;
    }
    thead {
      display: table-header-group;
      page-break-before: auto;
    }
    tbody tr {
      page-break-inside: avoid;
    }
    .table-bordered {
      border: 1px solid #dee2e6;
    }
    .table-bordered th,
    .table-bordered td {
      border: 1px solid #dee2e6;
      padding: 8px;
    }
  </style>
</head>
<body>
    <style>
        .button-container .download-btn {
          background-color: #0d6efd;
          color: #fff;
          border: none;
          padding: 6px 16px;
          border-radius: 6px;
          font-weight: 500;
          transition: background-color 0.3s ease;
          margin-right: 12px;
        }
        .button-container .download-btn:hover {
          background-color: #084298;
        }
        .filter-form {
          display: flex;
          align-items: center;
          gap: 1px;
          padding: 6px 12px;
          background-color: #f8f9fa;
          border: 1px solid #dee2e6;
          border-radius: 6px;
          box-shadow: 0 1px 3px rgba(0,0,0,0.1);
        }
        .filter-form select {
          min-width: 100px;
        }
    </style>
      
    <div class="col d-flex justify-content-end align-items-center mb-3 me-5 mt-3">
        <div class="d-flex gap-2">
            <a href="/admin/sales" class="btn btn-warning">Go Back</a>
            <button onclick="generatePDF()" class="btn btn-primary " style="margin-right: 10px;">
              Download PDF
            </button>
            <button onclick="downloadExcel()" class="btn btn-primary " style="margin-right: 10px;">
              Download ExcelSheet
            </button>
        </div>
        <form method="GET" action="/admin/salesReport" class="d-flex align-items-center bg-light p-2 rounded shadow-sm flex-wrap gap-2" id="filterForm">
            <label for="range" class="form-label mb-0 me-2 fw-semibold text-primary">
              Sort By:
            </label>
            <select 
              name="range" 
              id="range" 
              class="form-select form-select-sm w-auto border-primary me-2" 
              onchange="handleRangeChange()"
            >
              <option value="daily" <%= range === 'daily' ? 'selected' : '' %>>Daily</option>
              <option value="weekly" <%= range === 'weekly' ? 'selected' : '' %>>Weekly</option>
              <option value="monthly" <%= range === 'monthly' ? 'selected' : '' %>>Monthly</option>
              <option value="yearly" <%= range === 'yearly' ? 'selected' : '' %>>Yearly</option>
              <option value="custom" <%= range === 'custom' ? 'selected' : '' %>>Custom</option>
            </select>
            <div id="customDateBlock" class="d-flex flex-column" style="display: none;">
              <div class="d-flex flex-row gap-2">
                <input type="date" name="from" id="fromDate" class="form-control form-control-sm" value="<%= from || '' %>">
                <input type="date" name="to" id="toDate" class="form-control form-control-sm" value="<%= to || '' %>">
                <button type="submit" class="btn btn-primary btn-sm" id="applyBtn">Apply</button>
              </div>
              <p id="dateError" class="text-danger mt-1 mb-0" style="display: none;"></p>
            </div>
        </form>
    </div>
      
    <div id="salesReport" class="container p-4">
        <div class="text-center mb-4">
          <h2>Women Fashion</h2>
          <h4 class="mb-2">Sales Report</h4>
          <p><strong>Report Range:</strong>  <%= new Date(startDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'long', day: 'numeric' }) %> – 
            <%= new Date(endDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'long', day: 'numeric' }) %>
          </p>
          <p><strong>Generated On:</strong> <%= new Date().toLocaleDateString() %></p>
        </div>
      
        <div class="mb-4">
          <table class="table table-bordered">
            <tbody>
              <tr>
                <th>Total Sales</th>
                <td>₹<%= totalSales.toLocaleString() %></td>
                <th>Total Orders</th>
                <td><%= totalOrders %></td>
              </tr>
              <tr>
                <th>Products Sold</th>
                <td><%= totalProducts %></td>
                <th>Discounts Given</th>
                <td>₹<%= totalDiscounts.toLocaleString() %></td>
              </tr>
              <tr>
                <th>Net Revenue</th>
                <td>₹<%= netRevenue.toLocaleString() %></td>
                <th>Avg. Order Value</th>
                <td>₹<%= averageOrderValue.toFixed(2) %></td>
              </tr>
            </tbody>
          </table>
        </div>
      
        <div class="mb-4">
          <h5 class="mb-3">Order Details</h5>
          <table class="table table-striped table-bordered">
            <thead>
              <tr>
                <th>Order ID</th>
                <th>Customer</th>
                <th>Date</th>
                <th>Payment</th>
                <th>Status</th>
                <th>Discount</th>
                <th>Total (₹)</th>
              </tr>
            </thead>
            <tbody>
              <% orders.forEach(order => { %>
                <tr>
                  <td class="order-id"><%= order.orderId %></td>
                  <td><%= order.user.name %></td>
                  <td><%= new Date(order.createdOn).toLocaleDateString() %></td>
                  <td><%= order.paymentMethod.toUpperCase() %></td>
                  <td><%= order.status.toUpperCase() %></td>
                  <td><%= order.discount%></td>
                  <td>₹<%= order.finalAmount %></td>
                </tr>
              <% }) %>
              <tr class="table-dark fw-bold">
                <td colspan="5" class="text-end">Grand Total</td>
                <td>₹<%= totalDiscounts.toLocaleString() %></td>
                <td>₹<%= totalSales.toLocaleString() %></td>
              </tr>
            </tbody>
          </table>
        </div>
      
        <div class="text-center mt-5">
          <p>Generated by Women Fashion</p>
          <p class="text-muted">© <%= new Date().getFullYear() %> All Rights Reserved</p>
        </div>
    </div>
      
    <script>
      function generatePDF() {
        const element = document.getElementById("salesReport");
        const opt = {
          margin:       0.5,
          filename:     'sales-report.pdf',
          image:        { type: 'jpeg', quality: 0.98 },
          html2canvas:  { scale: 2 },
          jsPDF:        { unit: 'in', format: 'a4', orientation: 'portrait' }
        };
        html2pdf().from(element).set(opt).save();
      }
    </script>
    <script>
      function downloadExcel() {
        const wb = XLSX.utils.book_new();
        const ws_data = [];
        ws_data.push(["Tyrex"]);
        ws_data.push(["Sales Report"]);
        ws_data.push([`Report Range: ${"<%= new Date(startDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'long', day: 'numeric' }) %>"} - ${"<%= new Date(endDate).toLocaleDateString('en-IN', { year: 'numeric', month: 'long', day: 'numeric' }) %>"}`]);
        ws_data.push([`Generated On: ${new Date().toLocaleDateString()}`]);
        ws_data.push([]); 
        ws_data.push(["Total Sales", `₹<%= totalSales.toLocaleString() %>`, "Total Orders", "<%= totalOrders %>"]);
        ws_data.push(["Products Sold", "<%= totalProducts %>", "Discounts Given", `₹<%= totalDiscounts.toLocaleString() %>`]);
        ws_data.push(["Net Revenue", `₹<%= netRevenue.toLocaleString() %>`, "Avg. Order Value", `₹<%= averageOrderValue.toFixed(2) %>`]);
        ws_data.push([]); 
        ws_data.push(["Order ID", "Customer", "Date", "Payment", "Status", "Discount", "Total (₹)"]);
        <% orders.forEach(order => { %>
          ws_data.push([
            "<%= order.orderId %>",
            "<%= order.user.name %>",
            "<%= new Date(order.createdAt).toLocaleDateString() %>",
            "<%= order.paymentMethod.toUpperCase() %>",
            "<%= order.status.toUpperCase() %>",
            "<%= order.discount %>",
            "₹<%= order.finalAmount %>"
          ]);
        <% }) %>
        ws_data.push([
          "", "", "", "", "Grand Total",
          `₹<%= totalDiscounts.toLocaleString() %>`,
          `₹<%= totalSales.toLocaleString() %>`
        ]);
        const ws = XLSX.utils.aoa_to_sheet(ws_data);
        XLSX.utils.book_append_sheet(wb, ws, "Sales Report");
        XLSX.writeFile(wb, "sales-report.xlsx");
      }
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2pdf.js/0.10.1/html2pdf.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-W7Ff1DhJ6+t4T9ZGH9YfMPG3p1pN+9KEe3KfG/m7sGn5i9cuG5XLwIob9BwvSldH" crossorigin="anonymous"></script>
    <script>
      function handleRangeChange(autoLoad = false) {
        const range = document.getElementById('range').value;
        const from = document.getElementById('fromDate');
        const to = document.getElementById('toDate');
        const btn = document.getElementById('applyBtn');
        const error = document.getElementById('dateError');
        if (range === 'custom') {
          from.style.display = 'block';
          to.style.display = 'block';
          btn.style.display = 'inline-block';
          error.style.display = 'none';
        } else {
          from.style.display = 'none';
          to.style.display = 'none';
          btn.style.display = 'none';
          error.style.display = 'none';
          if (!autoLoad) {
            document.getElementById('filterForm').submit();
          }
        }
      }
      document.getElementById('applyBtn').addEventListener('click', function (e) {
        const from = document.getElementById('fromDate').value;
        const to = document.getElementById('toDate').value;
        const error = document.getElementById('dateError');
        if (!from || !to) {
          e.preventDefault();
          error.textContent = 'Please select both From and To dates.';
          error.style.display = 'block';
        } else {
          error.style.display = 'none';
        }
      });
      window.addEventListener('DOMContentLoaded', () => {
        handleRangeChange(true);
      });
    </script>
</body>
</html>