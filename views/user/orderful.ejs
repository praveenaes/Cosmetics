<%- include('../../views/partials/user/header',{user:user}) %>
    <link rel="stylesheet" href="/styles/userprofile_style.css">

    <link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">

    <style>
        .card-green {
            background-color: #ADD8E6;
        }

        .main {
            padding: 30px 0;
        }

        .dashboard-menu {
            background-color: #cce3e6;
            border-radius: 10px;
            padding: 15px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }

        .dashboard-menu .nav-link {
            font-weight: bold;
            color: #30683c;
            box-shadow: 0 4px 10px rgba(123, 131, 112, 0.3), 0 4px 20px rgba(0, 191, 255, 0.2);
            transition: box-shadow 0.3s ease;
        }

        .dashboard-menu .nav-link:hover {
            color: #00bfff;
            box-shadow: 0 4px 15px rgba(173, 255, 47, 0.5), 0 6px 25px rgba(0, 191, 255, 0.4);
        }

        .card {
            border-radius: 10px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
            margin-bottom: 20px;
        }

        .card-header {
            background-color: #487379;
            color: white;
            border-radius: 10px 10px 0 0;
        }

        .profile-image-container {
            display: flex;
            align-items: center;
        }

        .rounded-circle {
            border-radius: 50%;
            border: 2px solid #fff;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
        }

        .ml-3 {
            margin-left: 15px;
        }

        @media (max-width: 768px) {
            .dashboard-menu {
                padding: 10px;
            }

            .card {
                margin-bottom: 15px;
            }
        }

        body {
            background-color: #f7f7f7;
        }

        .sidebar {
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .sidebar a {
            color: #333;
            display: block;
            padding: 10px 0;
            text-decoration: none;
        }

        .sidebar a.active {
            color: #ff6600;
        }

        .sidebar a:hover {
            color: #ff6600;
        }

        .sidebar a i {
            margin-right: 10px;
        }

        .main-content {
            background-color: white;
            padding: 20px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        }

        .main-content h2 {
            margin-bottom: 20px;
        }

        .form-group label {
            font-weight: bold;
        }

        .form-group span {
            color: red;
        }

        .btn-orange {
            background-color: #ff6600;
            color: white;
        }

        .btn-orange:hover {
            background-color: #e65c00;
        }

        .btn-blue {
            background-color: #0000ff;
            color: white;
        }

        .btn-blue:hover {
            background-color: #0000cc;
        }

        .photo img {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .order-header {
            background-color: #f0f0f0;
            padding: 10px;
            border-top-left-radius: 5px;
            border-top-right-radius: 5px;
        }

        .order-body {
            padding: 20px;
        }

        .order-footer {
            padding: 10px;
            border-bottom-left-radius: 5px;
            border-bottom-right-radius: 5px;
        }

        .order-card {
            border: 1px solid #dee2e6;
            border-radius: 5px;
            margin-bottom: 20px;
        }

        .order-status {
            color: red;
        }

        .order-ship-to {
            color: green;
        }

        .order-link {
            color: blue;
            text-decoration: none;
        }

        .order-link:hover {
            text-decoration: underline;
        }

        .btn-orange {
            background-color: orange;
            color: white;
        }

        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
        }
    </style>



    <div class="container-fluid" style="padding-top:150px">
        <div class="row">

            <%- include('../../views/partials/user/sidebar',{user:user}) %>
                <!-- Main Content -->
                 
                <div class="col-md-10">
                    <h2 class="mb-4">Your Orders</h2>

                    <div class="container-fluid py-3">
                        <div class="row justify-content-center">
                            <div class="col-12 col-md-10 col-lg-8">
                                <form action="/orderSearch" method="POST" class="d-flex">

                                    <input type="text" id="searchInput" name="query" placeholder="Search by orderId"
                                        class="form-control me-2" />
                                    <button type="submit" class="btn btn-secondary me-2">Search</button>
                                    <a href="/orders" id="clearButton"
                                        class="btn btn-secondary d-flex align-items-center">Clear</a>
                                </form>
                            </div>
                        </div>
                    </div>



                    <% if (orders && orders.length> 0) { %>
                        <% orders.forEach(order=> { %>
                            <div class="order-card">
                                <div class="order-header">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <small class="text-muted">ORDER PLACED</small><br>
                                            <%= new Date(order.createdAt).toLocaleDateString() %>
                                        </div>
                                        <div class="col-md-1">
                                            <small class="text-muted">TOTAL</small><br>
                                            â‚¹<%= Math.round(order.finalAmount) %>
                                        </div>
                                        <div class="col-md-3">
                                            <small class="text-muted">ORDER ID</small><br>
                                            #<%= order.orderId %>
                                        </div>
                                        <div class="col-md-1">
                                            <small class="text-muted">STATUS</small><br>
                                            <span class="status-badge <%= 
                                        order.status === 'delivered' ? 'bg-success' :
                                        order.status === 'cancelled' ? 'bg-danger' :
                                        order.status === 'shipped' ? 'bg-info' :
                                        'bg-warning'
                                    %>">
                                                <%= order.status.toUpperCase() %>

                                            </span>
                                            <%if(order.status==='delivered' ){%>
                                                On
                                                <%=new Date(order.deliveredAt).toLocaleDateString()%>
                                                    <%}%>
                                                        <%if(order.status==='returned' ){%>
                                                            On
                                                            <%=new Date(order.updatedAt).toLocaleDateString()%>
                                                                <%}%>
                                        </div>
                                        <div class="col-md-2">
                                            <small class="text-muted">PAYMENT METHOD</small><br>
                                            <% if (order.paymentMethod==='cod' ) { %>
                                                CASH ON DELIVERY
                                                <% } else if (order.paymentMethod==='online payment' ) { %>
                                                    ONLINE PAYMENT
                                                    <% } else if (order.paymentMethod==='wallet' ) { %>
                                                        WALLET PAYMENT
                                                        <% } else { %>
                                                            UNKNOWN PAYMENT METHOD
                                                            <% } %>
                                        </div>

                                        <div class="col-md-3 text-end d-flex">
                                            <a href="/orderDetails?orderId=<%= order.orderId %>"
                                                class="btn btn-outline-primary btn-sm mt-2" style="height:30px">View
                                                Details</a>

                                            <% if (order.status==='delivered' && !order.returnReason &&
                                                order.requestStatus !=="rejected" ) { %>
                                                <button onclick="initiateReturn('<%= order._id %>')"
                                                    class="btn btn-warning btn-sm mt-2">
                                                    Request Return
                                                </button>
                                                <% } else if (order.status==='return requested' &&
                                                    order.requestStatus==='pending' ) { %>
                                                    <button onclick="cancelReturn('<%= order._id %>')"
                                                        class="btn btn-danger btn-sm mt-2">
                                                        Cancel Return Request
                                                    </button>
                                                    <% } else if (!['delivered', 'cancelled' , 'return requested'
                                                        , 'returning' , 'returned' ].includes(order.status)) { %>
                                                        <button onclick="cancelOrder('<%= order._id %>')"
                                                            class="btn btn-outline-danger btn-sm mt-2">
                                                            Cancel Order
                                                        </button>
                                                        <% } %>
                                        </div>
                                    </div>
                                </div>
                                <% for(let i=0; i< order.orderedItems.length;i++) { %>
                                    <div class="order-body">
                                        <div class="row align-items-center">
                                            <div class="col-md-2">
                                                <img src="uploads/re-image/<%= order.orderedItems[i].product.image[0] %>"
                                                    alt="<%= order.orderedItems[i].productName %>"
                                                    class="product-image">
                                            </div>
                                            <div class="col-md-6">
                                                <a href="/details?id=<%= order.orderedItems[i].product._id %>">
                                                    <h5>
                                                        <%= order.orderedItems[i].product.name %>
                                                    </h5>
                                                </a>
                                                <p class="text-muted mb-0">Quantity: <%= order.orderedItems[i].quantity
                                                        %>
                                                </p>
                                                <p class="text-muted">Price: â‚¹<%=
                                                        order.orderedItems[i].product.salesPrice*order.orderedItems[i].quantity
                                                        %>
                                                </p>
                                            </div>


                                        </div>

                                    </div>
                                    <% } %>
                            </div>
                            <% }); %>
                                <% } else { %>
                                    <div class="text-center py-5">
                                        <div class="mb-4">
                                            <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                                        </div>
                                        <h3>No orders yet</h3>
                                        <p class="text-muted">When you place an order, it will appear here.</p>
                                        <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                                    </div>
                                    <% } %>
                                        <!-- Pagination -->
                                        <div class="pagination-container">
                                            <div class="pagination">
                                                <% if (currentPage> 1) { %>
                                                    <a href="/orders?page=<%= currentPage - 1 %>">
                                                        <i class="fa-solid fa-backward"></i>
                                                    </a>
                                                    <% } %>

                                                        <% for (let i=1; i <=totalPages; i++) { %>
                                                            <a href="/orders?page=<%= i %>"
                                                                class="<%= currentPage === i ? 'active' : '' %>">
                                                                <%= i %>
                                                            </a>
                                                            <% } %>

                                                                <% if (currentPage < totalPages) { %>
                                                                    <a href="/orders?page=<%= currentPage + 1 %>">
                                                                        <i class="fa-solid fa-forward"></i>
                                                                    </a>
                                                                    <% } %>
                                            </div>

                                        </div>
                </div>


        </div>
    </div>

    <!-- Return Modal -->
    <div class="modal fade" id="returnModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Return Request</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="returnForm">
                        <div class="mb-3">
                            <label class="form-label">Return Reason Category</label>
                            <select class="form-select" id="returnReason" required>
                                <option value="">Select a reason</option>
                                <option value="Wrong size">Wrong size</option>
                                <option value="Damaged product">Damaged product</option>
                                <option value="Not as described">Not as described</option>
                                <option value="Quality issues">Quality issues</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Detailed Description</label>
                            <textarea class="form-control" id="returnDescription" rows="3"
                                placeholder="Please provide more details about your return reason..."
                                required></textarea>
                            <small class="text-muted">Please explain the issue in detail to help us better understand
                                your return request.</small>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Upload Images (Optional)</label>
                            <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                            <small class="text-muted">You can upload up to 3 images</small>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return
                        Request</button>
                </div>
            </div>
        </div>
    </div>

    <!-- SweetAlert2 for dialogs -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentOrderId = null;

        function initiateReturn(orderId) {
            currentOrderId = orderId;
            const modal = new bootstrap.Modal(document.getElementById('returnModal'));
            modal.show();
        }

        document.getElementById('returnReason').addEventListener('change', function () {
            const otherReasonDiv = document.getElementById('otherReasonDiv');
            if (this.value === 'Other') {
                otherReasonDiv?.classList.remove('d-none');
            } else {
                otherReasonDiv?.classList.add('d-none');
            }
        });

        async function submitReturn() {
            try {
                const reasonSelect = document.getElementById('returnReason');
                const returnDescription = document.getElementById('returnDescription');
                const imagesInput = document.getElementById('returnImages');

                const returnReason = reasonSelect.value;
                const description = returnDescription.value;

                if (!returnReason || !description) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select a reason category and provide a detailed description!',
                    });
                    return;
                }

                const formData = new FormData();
                formData.append('orderId', currentOrderId);
                formData.append('returnReason', returnReason);
                formData.append('returnDescription', description);

                const files = imagesInput.files;
                for (let i = 0; i < Math.min(files.length, 3); i++) {
                    formData.append('images', files[i]);
                }

                const response = await fetch('/return', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Return request submitted successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                        location.reload();
                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to submit return request',
                });
            }
        }

        async function cancelReturn(orderId) {
            try {
                const result = await Swal.fire({
                    title: 'Cancel Return Request',
                    text: 'Are you sure you want to cancel your return request?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, cancel it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/cancelReturnRequest', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId }),
                    });

                    const data = await response.json();

                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Return request cancelled successfully',
                            timer: 1500
                        });
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel return request'
                });
            }
        }

        async function cancelOrder(orderId) {
            const { value: reasonOption } = await Swal.fire({
                title: 'Cancel Order',
                input: 'select',
                inputLabel: 'Select a reason for cancellation',
                inputOptions: {
                    'Ordered by mistake': 'Ordered by mistake',
                    'Found a better price': 'Found a better price',
                    'Delivery took too long': 'Delivery took too long',
                    'Item no longer needed': 'Item no longer needed',
                    'Changed my mind': 'Changed my mind',
                    'Wrong item ordered': 'Wrong item ordered',
                    'Other': 'Other'
                },
                showCancelButton: true
            });

            if (!reasonOption) return;

            let finalReason = reasonOption;

            if (reasonOption === 'Other') {
                const { value: otherReason } = await Swal.fire({
                    title: 'Cancel Order',
                    input: 'textarea',
                    inputLabel: 'Please provide a reason for cancellation',
                    inputPlaceholder: 'Type your reason here...',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason!';
                        }
                    }
                });

                if (!otherReason) return;
                finalReason = otherReason;
            }

            try {
                const response = await fetch('/cancelOrder', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, reason: finalReason }),
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order cancelled successfully',
                        timer: 1500
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel order'
                });
            }
        }

        function confirmLogout(event) {
            event.preventDefault();
            Swal.fire({
                title: "Are you sure?",
                text: "You will be logged out!",
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: "Yes, Logout"
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = "/logout";
                }
            });
        }
    </script>
    <style>
        .pagination {
            margin-top: 20px;
            justify-content: center;
            align-items: center;
        }

        .pagination a {
            padding: 10px;
            margin: 4px;
            text-decoration: none;
            background-color: white;
            color: black;
            font-weight: bold;
            border-radius: 50%;
            align-items: center;
        }

        .pagination a i {
            padding: 4px;
        }

        .pagination a.active {
            background-color: #DAADCC;
            font-weight: bold;
        }
    </style>

    <%- include('../../views/partials/user/footer') %>