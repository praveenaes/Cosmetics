<%- include("../../views/partials/user/header") %>

<style>
  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f9f9f9;
    color: #222;
  }

  .main {
    padding: 40px 0;
  }

  .card {
    background-color: #fff;
    border-radius: 12px;
    box-shadow: 0 6px 18px rgba(0, 0, 0, 0.06);
    margin-bottom: 25px;
    border: none;
  }

  .card-header {
    background-color: #2d6a4f;
    color: #fff;
    font-weight: 600;
    border-radius: 12px 12px 0 0;
    padding: 16px 20px;
  }

  .card-body {
    padding: 20px 24px;
  }

  .card-green {
    background-color: #d8f3dc; /* profile highlight */
  }

  .dashboard-menu {
    background-color: #ffffff;
    border-radius: 12px;
    padding: 20px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  }

  .dashboard-menu .nav-link {
    font-weight: 500;
    color: #1b4332;
    padding: 10px 16px;
    border-radius: 8px;
    transition: all 0.2s ease-in-out;
  }

  .dashboard-menu .nav-link:hover,
  .dashboard-menu .nav-link.active {
    background-color: #95d5b2;
    color: #000;
  }

  .btn-success,
  .btn-primary,
  .btn-small {
    background-color: #40916c;
    color: #fff;
    border: none;
    padding: 8px 16px;
    border-radius: 8px;
    font-weight: 500;
    transition: background-color 0.3s ease-in-out;
  }

  .btn-success:hover,
  .btn-primary:hover,
  .btn-small:hover {
    background-color: #2d6a4f;
  }

  .form-group {
    margin-bottom: 15px;
  }

  .page-header.breadcrumb-wrap {
    background-color: #ffffff;
    padding: 20px 0;
    border-bottom: 1px solid #f8f4f4;
  }

  .breadcrumb {
    display: flex;
    align-items: center;
    font-size: 20px;
    font-weight: 500;
    color: #333;
  }

  .breadcrumb a {
    color: #1b4332;
    text-decoration: none;
    margin: 0 6px;
    position: relative;
  }

  .breadcrumb a:hover {
    color: #2d6a4f;
  }

  .breadcrumb span {
    margin: 0 6px;
    color: #090000;
  }

  .breadcrumb a::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 2px;
    background: #1b4332;
    left: 0;
    bottom: -3px;
    transform: scaleX(0);
    transition: transform 0.3s ease;
  }

  .breadcrumb a:hover::after {
    transform: scaleX(1);
  }

  .btn-primary.w-70 {
    width: 70%;
  }

  .tab-content {
    padding-top: 20px;
  }

  .btn-small {
    font-size: 0.875rem;
  }

  address {
    line-height: 1.6;
  }

  @media (max-width: 768px) {
    .dashboard-menu {
      padding: 15px;
    }

    .card {
      margin-bottom: 20px;
    }

    .breadcrumb {
      font-size: 16px;
    }
  }


</style>



<main class="main">
 <div class="page-header breadcrumb-wrap mb-3">
   <div class="container-fluid">
     <div class="breadcrumb"  >
       <a href="#" rel="nofollow"  >Home</a>
       <span></span> Profile <span></span> Account
     </div>
   </div>
 </div>
  <section class="pt-10 pb-10">
   <div class="container-fluid">
     <div class="row ">
      <div class="col-lg-12">
        <div class="row">
           <div class="col-md-2"  style="margin-top: 80px;" >
             <div class="dashboard-menu">
               <ul class="nav flex-column" role="tablist">
                 <li class="nav-item">
                   <a class="nav-link active" id="dashboard-tab" data-bs-toggle="tab" href="#dashboard" role="tab" aria-controls="dashboard" aria-selected="false">
                     <i class="fi-rs-settings-sliders mr-10"></i>Dashboard
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="address-tab" data-bs-toggle="tab" href="#address" role="tab" aria-controls="address" aria-selected="true">
                     <i class="fi-rs-marker mr-10"></i>My Address
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="orders-tab" data-bs-toggle="tab" href="#orders" role="tab" aria-controls="orders" aria-selected="false">
                     <i class="fi-rs-shopping-bag mr-10"></i>Orders
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#track-orders" role="tab" aria-controls="track-orders" aria-selected="false">
                     <i class="fi-rs-shopping-cart-check mr-10"></i>Wallet Status
                   </a>
                 </li>
                 
                 <li class="nav-item">
                   <a class="nav-link" id="track-orders-tab" data-bs-toggle="tab" href="#referal" role="tab" aria-controls="track-orders" aria-selected="false">
                     <i class="fi-rs-shopping-cart-check mr-10"></i>Referals
                   </a>
                 </li>
                 <li class="nav-item">
                   <a class="nav-link" href="/logout">
                     <i class="fi-rs-sign-out mr-10"></i>Logout
                   </a>
                 </li>
               </ul>
             </div>
           </div>
           <div class="col-md-8">
             <div class="tab-content dashboard-content">


              <div class="tab-pane fade show active" id="dashboard" role="tabpanel" aria-labelledby="dashboard-tab">
                <div class="card card-green" >
                  <div class="card-header" style="background-color: #72d5a4" >
                    <h5 class="mb-0 text-center" style="color: #fbfbfc;" >User Profile</h5>
                  </div>
                  <div class="card-body text-center">

                   <!--- IMAGE SELECTION -->

                    <h5 class="card-title"><%= user.name %></h5>
                    <p class="card-text">
                      <strong>Phone:</strong><%= user.phone %>
                    </p>
                    <p class="card-text">
                      <strong>Email:</strong><%= user.email %>
                    </p>
             
                    <!-- Action Links -->
                    <a href="/change-email" class="btn btn-sm btn-success ml-2">Change Email</a>
                    <a href="/change-password" class="btn btn-sm btn-success">Change Password</a>
                  </div>
                </div>
             </div>
             


               <div
                 class="tab-pane fade"
                 id="address"
                 role="tabpanel"
                 aria-labelledby="address-tab"
               >
                 <div class="row">
                <%if(userAddress){%>
                  <%userAddress.address.forEach((address)=>{%>
                   <div class="col-lg-6">
                     <div class="card mb-3 mb-lg-0">
                       <div class="card-header" style="background-color: #72d5a4">
                        <h5 class="mb-0" style="color: white;"><%= address.addressType %></h5>

                       </div>


                       <div class="card-body">
                         <address>
                        <%=address.name%><br>
                        <%=address.city%><br>
                        <%=address.landMark%><br>
                        <%=address.state%><br>
                        <%=address.pincode%><br>
                         <%=address.phone%><br>
                       <%=address.altPhone%>
                         </address>
                        
                         <div class="d-flex justify-content-between">
                           <a href="/editAddress?id=<%=address._id%>"  style="text-decoration: none;"  class="btn-small"   >Edit</a>
                           <a href="/deleteAddress?id=<%=address._id%>"  style="text-decoration: none;" class="btn-small" onclick="return confirm('Are you sure you want to delete this address?')">Delete</a>
                         </div>
                        
                       </div>
                     </div>
                   </div>
                <%})%><%}else{%>
                   <div class="col-lg-6">
                     <div class="card mb-3 mb-lg-0">
                       <div class="card-header">
                         <h5 class="mb-0"></h5>
                       </div>
                       <div class="card-body">
                         <address>No address</address>
                       </div>
                     </div>
                   </div>
              <%}%>
                   <div>
                     <a href="/addAddress">
                       <button style="background-color: blue; border: none; color:white; margin-top: 15px; border-radius: 10%; width: 150px; height: 40px;" w-30">
                         Add address
                       </button>
                     </a>
                   </div>
                 </div>
               </div>

                       <!-- order ejs starting -->

<div class="tab-pane fade" id="orders" role="tabpanel" aria-labelledby="orders-tab">
  <div id="orders-content" style="width: 1000px;" >
      <div class="container-fluid mt-9" style="margin-top: 100px; background-color:#f7f7f7;">
          <div class="row" style="width: 1000px;">
            <div class="col-md-12" style="max-width: calc(100% - 100px); margin-top: -120px;">

                  <h2 class="mb-4">Your Orders</h2>

                  <div class="container-fluid py-3">
                    <div class="row justify-content-center">
                        <div class="col-12 col-md-10 col-lg-8">
                            <form action="/userProfile" method="get" class="d-flex">
                                <input type="text" id="searchInput" name="query" placeholder="Search by orderId"
                                    class="form-control me-2" style="margin-right: 0.5rem;" value="<%= query %>" />
                                <button type="submit" class="btn btn-secondary me-2" style="margin-right: 0.5rem; height:50px ">Search</button>
                                <a href="/userProfile" id="clearButton" style=" height:50px " class="btn btn-secondary d-flex align-items-center">Clear</a>
                            </form>
                        </div>
                    </div>
                </div>

                  <% if (orders && orders.length > 0) { %>
                    <% orders.forEach(order => { %>
                      <div style="border:1px solid #dee2e6; border-radius:5px; margin-bottom:20px; width: calc(100% + 100px);">
                        <div style="background-color:#f0f0f0; padding:10px; border-top-left-radius:5px; border-top-right-radius:5px;">
                                  <div class="row align-items-center">
                                      <div class="col-md-2">
                                          <small class="text-muted">ORDER PLACED</small><br>
                                          <% if (order.createdOn) { %>
                                              <small><%= order.createdOn.toDateString() %></small>
                                          <% } else { %>
                                              <small>No date available</small>
                                          <% } %>
                                          
                                        </div>
                                      <div class="col-md-1">
                                          <small class="text-muted">TOTAL</small><br>
                                          <small><%= order.totalPrice %></small>
                                      </div>
                                      <div class="col-md-3">
                                          <small class="text-muted">ORDER ID</small><br>
                                          <small><%= order.orderId %></small>
                                      </div>
                                      <div class="col-md-1">
                                          <small class="text-muted">STATUS</small><br>
                                          <span  style="font-size: 13px;" class="status-badge <%= 
                                          order.status === 'delivered' ? 'bg-success' :
                                          order.status === 'cancelled' ? 'bg-danger' :
                                          order.status === 'shipped' ? 'bg-info' :
                                          'bg-warning'
                                      %>">
                                                  <%= order.status.toUpperCase() %>
                                      </div>
                                      <div class="col-md-2">
                                          <small class="text-muted">PAYMENT METHOD</small><br>
                                         <div>
                                          <% if (order.paymentMethod === 'cod') { %>
                                            Cash On Delivery
                                        <% } else if (order.paymentMethod === 'online payment') { %>
                                            Online Payment
                                        <% } else if (order.paymentMethod === 'wallet') { %>
                                            Wallet Payment
                                        <% } %>
                                         </div>
                                      </div>
                                      <div class="col-md-3 text-end d-flex">
                                          <a href="/orderDetails?orderId=<%= order.orderId %>" class="btn btn-outline-primary btn-sm mt-2" style="height:50px;">View Details</a>
                                          <% if (order.status==='delivered' && !order.returnReason &&
                                                order.requestStatus !=="rejected" ) { %>
                                          <button onclick="initiateReturn('<%= order._id %>')" class="btn btn-warning btn-sm mt-2" style="margin-left:5px;">Request Return</button>
                                          <% } else if (order.status==='return requested' &&
                                                    order.requestStatus==='pending' ) { %>
                                          <button onclick="cancelReturn('<%= order._id %>')" class="btn btn-danger btn-sm mt-2" style="margin-left:5px;">Cancel Return Request</button>
                                          <% } else if (!['delivered', 'cancelled' , 'return requested'
                                                        , 'returning' , 'returned' ].includes(order.status)) { %>
                                          <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-outline-danger btn-sm mt-2" style="margin-left:5px;">Cancel Order</button>
                                         <%}%>
                                        </div>
                                  </div>
                              </div>
                      <%for(let i=0;i<order.orderedItems.length;i++){%>
                              <div style="padding:20px;">
                                  <div class="row align-items-center">
                                      <div class="col-md-2">
                                          <img src="/uploads/product-images/<%=order.orderedItems[i].product.productImage[0]%>" alt="" style="width:80px; height:80px; object-fit:cover;">
                                      </div>
                                      <div class="col-md-6">
                                          <a style="text-decoration: none; color: black;" href="/product/<%= order.orderedItems[i].product._id %>"><%= order.orderedItems[i].product.productName %></a>
                                          <p class="text-muted mb-0">Qty:<%= order.orderedItems[i].quantity%></p>
                                          <p class="text-muted">Price: <%= order.orderedItems[i].product.salePrice %></p>
                                      </div>
                                  </div>
                              </div>
                              <%}%>
                          </div>
                      <% }) %> <!-- End of orders loop -->
                  <% } else { %> <!-- If no orders -->
                      <div class="text-center py-5">
                          <div class="mb-4">
                              <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                          </div>
                          <h3>No orders yet</h3>
                          <p class="text-muted">When you place an order, it will appear here.</p>
                          <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                      </div>
                  <% } %>

              </div>
          </div>
      </div>
  </div>
</div>






                             <!-- order ejs ended -->

                   <!-----------return request modal starting-->
<div class="modal fade" id="returnModal" tabindex="-1">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title">Return Request</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
              <form id="returnForm">
                  <div class="mb-3">
                      <label class="form-label">Return Reason Category</label>
                      <select class="form-select" id="returnReason" required>
                          <option value="">Select a reason</option>
                          <option value="Wrong size">Wrong size</option>
                          <option value="Damaged product">Damaged product</option>
                          <option value="Not as described">Not as described</option>
                          <option value="Quality issues">Quality issues</option>
                          <option value="Other">Other</option>
                      </select>
                  </div>
                  <div class="mb-3">
                      <label class="form-label">Detailed Description</label>
                      <textarea class="form-control" id="returnDescription" rows="3"
                          placeholder="Please provide more details about your return reason..."
                          required></textarea>
                      <small class="text-muted">Please explain the issue in detail to help us better understand
                          your return request.</small>
                  </div>
                  <div class="mb-3">
                      <label class="form-label">Upload Images (Optional)</label>
                      <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                      <small class="text-muted">You can upload up to 3 images</small>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return
                  Request</button>
          </div>
      </div>
  </div>
</div>
                      <!-----retuen request modal ending------->

               <div class="tab-pane fade" id="track-orders" role="tabpanel" aria-labelledby="track-orders-tab">
                 <div class="card">
                   <div class="card-header" style="background-color: #72d5a4; display: flex;align-items: center;justify-content: center;" >
                     <h5 class="mb-0">Wallet</h5>
                   </div>
                   <div class="card-body contact-from-area">
                     <div class="row">
                       <div class="col-lg-8 mx-auto text-center mt-88">
                         <form>
                           <div class="form-group">
                             <label for="walletAmount" class="h4">Balance Amount:<br><%=wallet.balance%></label>
                             <div class="h3"></div>
                           </div>
                           <button type="button" class="btn btn-success" onclick="">Add Money</button>
                         </form>
                       </div>
                     </div>
                   </div>
                 </div>
               </div>


               <div class="tab-pane fade" id="wallet-history" role="tabpanel" aria-labelledby="orders-tab">
                 <div class="card">
                   <div class="card-header">
                     <h5 class="mb-0">Wallet History</h5>
                   </div>
                   <div class="card-body">
                     <div class="table-responsive">
                       <table class="table">
                         <thead>
                           <tr>
                             <th>Date</th>
                             <th>Status</th>
                             <th>Amount</th>
                           </tr>
                         </thead>
                         <tbody>
                           <tr>
                             <td></td>
                             <td></td>
                             <td></td>
                           </tr>
                         </tbody>
                       </table>
                     </div>
                   </div>
                 </div>
               </div>


               <div class="tab-pane fade" id="referal" role="tabpanel" aria-labelledby="track-orders-tab">
                 <div class="card">
                   <div class="card-header">
                     <h5 class="mb-0">Referal</h5>
                   </div>
                   <div class="card-body">
                     <h6 class="mb-3">Refer your friends and earn money!</h6>
                     <p>Share this link: <strong>></strong></p>
                     <p>Earned: ₹</p>
                   </div>
                 </div>
               </div>
       </div>
     </div>
   </div>
 </section>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>

           //-------return request starting---------

        let currentOrderId = null;

        function initiateReturn(orderId) {
            currentOrderId = orderId;
            const modal = new bootstrap.Modal(document.getElementById('returnModal'));
            modal.show();
        }

        document.getElementById('returnReason').addEventListener('change', function () {
            const otherReasonDiv = document.getElementById('otherReasonDiv');
            if (this.value === 'Other') {
                otherReasonDiv?.classList.remove('d-none');
            } else {
                otherReasonDiv?.classList.add('d-none');
            }
        });

        async function submitReturn() {
            try {
                const reasonSelect = document.getElementById('returnReason');
                const returnDescription = document.getElementById('returnDescription');
                const imagesInput = document.getElementById('returnImages');

                const returnReason = reasonSelect.value;
                const description = returnDescription.value;

                if (!returnReason || !description) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select a reason category and provide a detailed description!',
                    });
                    return;
                }

                const formData = new FormData();
                formData.append('orderId', currentOrderId);
                formData.append('returnReason', returnReason);
                formData.append('returnDescription', description);

                const files = imagesInput.files;
                for (let i = 0; i < Math.min(files.length, 3); i++) {
                    formData.append('images', files[i]);
                }

                const response = await fetch('/return', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Return request submitted successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                      window.location.href = '/userProfile';

                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to submit return request',
                });
            }
        }

      //-------return request ending---------


      //-----cancel return starting-----
                
        async function cancelReturn(orderId) {
            try {
                const result = await Swal.fire({
                    title: 'Cancel Return Request',
                    text: 'Are you sure you want to cancel your return request?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, cancel it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/cancelReturnRequest', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId }),
                    });

                    const data = await response.json();

                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Return request cancelled successfully',
                            timer: 1500
                        });
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel return request'
                });
            }
        }

              //-----cancel return ending-------  

               //----- cancel order starting-------

        async function cancelOrder(orderId) {
            const { value: reasonOption } = await Swal.fire({
                title: 'Cancel Order',
                input: 'select',
                inputLabel: 'Select a reason for cancellation',
                inputOptions: {
                    'Ordered by mistake': 'Ordered by mistake',
                    'Found a better price': 'Found a better price',
                    'Delivery took too long': 'Delivery took too long',
                    'Item no longer needed': 'Item no longer needed',
                    'Changed my mind': 'Changed my mind',
                    'Wrong item ordered': 'Wrong item ordered',
                    'Other': 'Other'
                },
                showCancelButton: true
            });

            if (!reasonOption) return;

            let finalReason = reasonOption;

            if (reasonOption === 'Other') {
                const { value: otherReason } = await Swal.fire({
                    title: 'Cancel Order',
                    input: 'textarea',
                    inputLabel: 'Please provide a reason for cancellation',
                    inputPlaceholder: 'Type your reason here...',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason!';
                        }
                    }
                });

                if (!otherReason) return;
                finalReason = otherReason;
            }

            try {
                const response = await fetch('/cancelOrder', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, reason: finalReason }),
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order cancelled successfully',
                        timer: 1500
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel order'
                });
            }
        }

              // -------cancel order ending-------

        
    </script>

<%- include("../../views/partials/user/footer") %>





