<%- include("../../views/partials/user/header") %>

<div class="d-flex" style="min-height: 100vh;">
  <!-- Sidebar -->
  <div>
    <%- include("../../views/partials/user/sidebar") %>
  </div>
    <div id="orders-content" style="width: 1000px;" >
        <div class="container-fluid mt-9"  background-color:#f7f7f7;">
            <div class="row" >
              <div class="col-md-12" style="max-width: calc(100% - 150px); margin-top: 100px;margin-left: 290px;">
  
                    <h2 class="mb-4">Your Orders</h2>
  
                    <div class="container-fluid py-3">
                        <div class="row justify-content-center">
                          <div class="col-12 col-md-10 col-lg-8">
                            <form action="/userOrder" method="get" class="d-flex">
                              <input type="text" id="searchInput" name="query" placeholder="Search by orderId"
                                     class="form-control me-2" style="margin-right: 0.5rem;" value="<%= query %>" />
                              <button type="submit" class="btn btn-secondary me-2" style="margin-right: 0.5rem; height:50px ">Search</button>
                              <a href="/userOrder?query=" id="clearButton" style="height:50px" class="btn btn-secondary d-flex align-items-center">Clear</a>
                            </form>
                          </div>
                        </div>
                      </div>
                      
  
                    <% if (orders && orders.length > 0) { %>
                      <% orders.forEach(order => { %>
                        <div style="border:1px solid #dee2e6; border-radius:5px; margin-bottom:20px; width: calc(100% + 100px);">
                          <div style="background-color:#f0f0f0; padding:10px; border-top-left-radius:5px; border-top-right-radius:5px;">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <small class="text-muted">ORDER PLACED</small><br>
                                            <% if (order.createdOn) { %>
                                                <small><%= order.createdOn.toDateString() %></small>
                                            <% } else { %>
                                                <small>No date available</small>
                                            <% } %>
                                            
                                          </div>
                                        <div class="col-md-1">
                                            <small class="text-muted">TOTAL</small><br>
                                            <small><%= order.totalPrice %></small>
                                        </div>
                                        <div class="col-md-3">
                                            <small class="text-muted">ORDER ID</small><br>
                                            <small><%= order.orderId %></small>
                                        </div>
                                        <div class="col-md-1">
                                            <small class="text-muted">STATUS</small><br>
                                            <span  style="font-size: 11px;" class="status-badge <%= 
                                            order.status === 'delivered' ? 'bg-success' :
                                            order.status === 'pending' ? 'bg-secondary text-white' : 
                                            order.status === 'cancelled' ? 'bg-danger' :
                                            order.status === 'shipped' ? 'bg-info' :
                                            'bg-warning'
                                        %>">
                                                    <%= order.status.toUpperCase() %>
                                        </div>
                                        <div class="col-md-2">
                                            <small class="text-muted">PAYMENT METHOD</small><br>
                                           <div>
                                            <% if (order.paymentMethod === 'cod') { %>
                                              Cash On Delivery
                                          <% } else if (order.paymentMethod === 'online payment') { %>
                                              Online Payment
                                          <% } else if (order.paymentMethod === 'wallet') { %>
                                              Wallet Payment
                                          <% } %>
                                          <br>
                                          <%if(order.status==='pending'){%>
                                        <a href="/retryPayment?orderId=<%=order.razorpayOrderId%>"><button class="btn btn-outline-warning btn-sm fw-semibold text-uppercase" >Retry Payment</button></a> 
                                         <%}%>
                                           </div>
                                        </div>
                                        <div class="col-md-3 text-end d-flex">
                                            <a href="/orderDetails?orderId=<%= order.orderId %>" class="btn btn-outline-primary btn-sm mt-2" style="height:50px;">View Details</a>
                                            <% if (order.status==='delivered' && !order.returnReason &&
                                                  order.requestStatus !=="rejected" ) { %>
                                            <button onclick="initiateReturn('<%= order._id %>')" class="btn btn-warning btn-sm mt-2" style="margin-left:5px;">Request Return</button>
                                            <% } else if (order.status==='return requested' &&
                                                      order.requestStatus==='pending' ) { %>
                                            <button onclick="cancelReturn('<%= order._id %>')" class="btn btn-danger btn-sm mt-2" style="margin-left:5px;">Cancel Return Request</button>
                                            <% } else if (!['delivered', 'cancelled' , 'return requested'
                                                          , 'returning' , 'returned' ].includes(order.status)) { %>
                                            <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-outline-danger btn-sm mt-2" style="margin-left:5px;">Cancel Order</button>
                                           <%}%>
                                          </div>
                                    </div>
                                </div>
                        <%for(let i=0;i<order.orderedItems.length;i++){%>
                                <div style="padding:20px;">
                                    <div class="row align-items-center">
                                        <div class="col-md-2">
                                            <img src="/uploads/product-images/<%=order.orderedItems[i].product.productImage[0]%>" alt="" style="width:80px; height:80px; object-fit:cover;">
                                        </div>
                                        <div class="col-md-6">
                                            <a style="text-decoration: none; color: black;" href="/product/<%= order.orderedItems[i].product._id %>"><%= order.orderedItems[i].product.productName %></a>
                                            <p class="text-muted mb-0">Qty:<%= order.orderedItems[i].quantity%></p>
                                            <p class="text-muted">Price: <%= order.orderedItems[i].product.salePrice %></p>
                                         <%if( ['processing','pending'].includes(order.status) && order.orderedItems.length > 1 &&  order.orderedItems[i].productStatus === 'active' && order.paymentStatus != 'Failed'){%>
                                         <button class="btn btn-outline-danger btn-sm fw-semibold text-uppercase" onclick="cancelProduct('<%=order._id %>','<%= i%>')">cancel Product</button>
                                         <%}%>
                                         <%if(order.orderedItems[i].productStatus === 'cancelled'){%>
                                         <span class="badge bg-danger text-white">PRODUCT CANCELLED</span>
                                         <%}%>
                                         
                                        </div>
                                    </div>
                                </div>
                                <%}%>
                            </div>
                        <% }) %> <!-- End of orders loop -->
                    <% } else { %> <!-- If no orders -->
                        <div class="text-center py-5">
                            <div class="mb-4">
                                <i class="fas fa-shopping-bag fa-3x text-muted"></i>
                            </div>
                            <h3>No orders yet</h3>
                            <p class="text-muted">When you place an order, it will appear here.</p>
                            <a href="/shop" class="btn btn-primary mt-3">Start Shopping</a>
                        </div>
                    <% } %>
  
                </div>
            </div>
        </div>
    </div>   
</div>


<div class="pagination-container d-flex justify-content-center mt-4 mb-4">
    <nav aria-label="Page navigation">
      <ul class="pagination pagination-sm flex-wrap">
        <% if (currentPage > 1) { %>
        <li class="page-item">
          <a href="?page=<%= currentPage - 1 %>" class="page-link">&laquo; <span class="d-none d-sm-inline">Previous</span></a>
        </li>
        <% } %>
        
        <% for (let i = 1; i <= totalPages; i++) { %>
          <% if (i === currentPage) { %>
          <li class="page-item active">
            <span class="page-link"><%= i %></span>
          </li>
          <% } else { %>
          <li class="page-item">
            <a href="?page=<%= i %>" class="page-link"><%= i %></a>
          </li>
          <% } %>
        <% } %>
        
        <% if (currentPage < totalPages) { %>
        <li class="page-item">
          <a href="?page=<%= currentPage + 1 %>" class="page-link"><span class="d-none d-sm-inline">Next</span> &raquo;</a>
        </li>
        <% } %>
      </ul>
    </nav>
  </div>
  

                     <!-----------return request modal starting-->
<div class="modal fade" id="returnModal" tabindex="-1">
  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title">Return Request</h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
          </div>
          <div class="modal-body">
              <form id="returnForm">
                  <div class="mb-3">
                      <label class="form-label">Return Reason Category</label>
                      <select class="form-select" id="returnReason" required>
                          <option value="">Select a reason</option>
                          <option value="Wrong size">Wrong size</option>
                          <option value="Damaged product">Damaged product</option>
                          <option value="Not as described">Not as described</option>
                          <option value="Quality issues">Quality issues</option>
                          <option value="Other">Other</option>
                      </select>
                  </div>
                  <div class="mb-3">
                      <label class="form-label">Detailed Description</label>
                      <textarea class="form-control" id="returnDescription" rows="3"
                          placeholder="Please provide more details about your return reason..."
                          required></textarea>
                      <small class="text-muted">Please explain the issue in detail to help us better understand
                          your return request.</small>
                  </div>
                  <div class="mb-3">
                      <label class="form-label">Upload Images (Optional)</label>
                      <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                      <small class="text-muted">You can upload up to 3 images</small>
                  </div>
              </form>
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
              <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return
                  Request</button>
          </div>
      </div>
  </div>
</div>
                      <!-----retuen request modal ending------->


<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>

           //-------return request starting---------

        let currentOrderId = null;

        function initiateReturn(orderId) {
            currentOrderId = orderId;
            const modal = new bootstrap.Modal(document.getElementById('returnModal'));
            modal.show();
        }

        document.getElementById('returnReason').addEventListener('change', function () {
            const otherReasonDiv = document.getElementById('otherReasonDiv');
            if (this.value === 'Other') {
                otherReasonDiv?.classList.remove('d-none');
            } else {
                otherReasonDiv?.classList.add('d-none');
            }
        });

        async function submitReturn() {
            try {
                const reasonSelect = document.getElementById('returnReason');
                const returnDescription = document.getElementById('returnDescription');
                const imagesInput = document.getElementById('returnImages');

                const returnReason = reasonSelect.value;
                const description = returnDescription.value;

                if (!returnReason || !description) {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select a reason category and provide a detailed description!',
                    });
                    return;
                }

                const formData = new FormData();
                formData.append('orderId', currentOrderId);
                formData.append('returnReason', returnReason);
                formData.append('returnDescription', description);

                const files = imagesInput.files;
                for (let i = 0; i < Math.min(files.length, 3); i++) {
                    formData.append('images', files[i]);
                }

                const response = await fetch('/return', {
                    method: 'POST',
                    body: formData
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Return request submitted successfully!',
                        confirmButtonText: 'OK'
                    }).then(() => {
                      window.location.href = '/userProfile';

                    });
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: error.message || 'Failed to submit return request',
                });
            }
        }

      //-------return request ending---------


      //-----cancel return starting-----
                
        async function cancelReturn(orderId) {
            try {
                const result = await Swal.fire({
                    title: 'Cancel Return Request',
                    text: 'Are you sure you want to cancel your return request?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#d33',
                    cancelButtonColor: '#3085d6',
                    confirmButtonText: 'Yes, cancel it!'
                });

                if (result.isConfirmed) {
                    const response = await fetch('/cancelReturnRequest', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ orderId }),
                    });

                    const data = await response.json();

                    if (data.success) {
                        await Swal.fire({
                            icon: 'success',
                            title: 'Success',
                            text: 'Return request cancelled successfully',
                            timer: 1500
                        });
                        location.reload();
                    } else {
                        throw new Error(data.message);
                    }
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel return request'
                });
            }
        }

              //-----cancel return ending-------  

               //----- cancel order starting-------

        async function cancelOrder(orderId) {
            const { value: reasonOption } = await Swal.fire({
                title: 'Cancel Order',
                input: 'select',
                inputLabel: 'Select a reason for cancellation',
                inputOptions: {
                    'Ordered by mistake': 'Ordered by mistake',
                    'Found a better price': 'Found a better price',
                    'Delivery took too long': 'Delivery took too long',
                    'Item no longer needed': 'Item no longer needed',
                    'Changed my mind': 'Changed my mind',
                    'Wrong item ordered': 'Wrong item ordered',
                    'Other': 'Other'
                },
                showCancelButton: true
            });

            if (!reasonOption) return;

            let finalReason = reasonOption;

            if (reasonOption === 'Other') {
                const { value: otherReason } = await Swal.fire({
                    title: 'Cancel Order',
                    input: 'textarea',
                    inputLabel: 'Please provide a reason for cancellation',
                    inputPlaceholder: 'Type your reason here...',
                    showCancelButton: true,
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason!';
                        }
                    }
                });

                if (!otherReason) return;
                finalReason = otherReason;
            }

            try {
                const response = await fetch('/cancelOrder', {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ orderId, reason: finalReason }),
                });

                const data = await response.json();

                if (data.success) {
                    await Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: 'Order cancelled successfully',
                        timer: 1500
                    });
                    location.reload();
                } else {
                    throw new Error(data.message);
                }
            } catch (error) {
                console.error('Error:', error);
                await Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: error.message || 'Failed to cancel order'
                });
            }
        }

              // -------cancel order ending-------



                  // cancel single product starting.......

                async function cancelProduct(orderId,index){

  const { value: reasonOption } = await Swal.fire({
    title: 'Cancel Order',
    input: 'select',
    inputLabel: 'Select a reason for cancellation',
    inputOptions: {
      'Ordered by mistake': 'Ordered by mistake',
      'Found a better price': 'Found a better price',
      'Item no longer needed': 'Item no longer needed',
      'Changed my mind': 'Changed my mind',
      'Wrong item ordered': 'Wrong item ordered',
      'Other': 'Other'
    },
    showCancelButton: true
  });

  if (!reasonOption) return;

  let finalReason = reasonOption;

  if (reasonOption === 'Other') {
    const { value: otherReason } = await Swal.fire({
      title: 'Cancel Order',
      input: 'textarea',
      inputLabel: 'Please provide a reason for cancellation',
      inputPlaceholder: 'Type your reason here...',
      showCancelButton: true,
      inputValidator: (value) => {
        if (!value) {
          return 'You need to provide a reason!';
        }
      }
    });

    if (!otherReason) return;
    finalReason = otherReason;
  }

  try {
    const response = await fetch('/cancelProduct', {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ orderId, index,reason: finalReason }),
    });

    const data = await response.json();

    if (data.success) {
      await Swal.fire({
        icon: 'success',
        title: 'Success',
        text: 'Product cancelled successfully',
        timer: 1500
      });
      location.reload();
    } else {
      throw new Error(data.message);
    }
  } catch (error) {
    console.error('Error:', error);
    await Swal.fire({
      icon: 'error',
      title: 'Error',
      text: error.message || 'Failed to cancel Product'
    });
  }
}

                    // cancel single product ending.......
        
    </script>

  
  