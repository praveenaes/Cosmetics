<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<style>
    /* Main content section background */
.content-main {
    background: linear-gradient(135deg, #eceef5 0%, #f5f3f7 100%);
    min-height: 100vh;
    padding: 20px;
    position: relative;
}

/* Add subtle pattern overlay */
.content-main::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: radial-gradient(circle at 25% 25%, rgba(255,255,255,0.1) 0%, transparent 50%);
    pointer-events: none;
}

/* Card with premium box shadow */
.card-login {
    background: white;
    border: none;
    border-radius: 16px;
    position: relative;
    z-index: 2;
    transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
    
    /* Multi-layered shadow for depth */
    box-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.05),
        0 8px 16px rgba(0, 0, 0, 0.1),
        0 16px 32px rgba(0, 0, 0, 0.08),
        0 32px 64px rgba(0, 0, 0, 0.05);
}

/* Enhanced hover effect */
.card-login:hover {
    transform: translateY(-8px);
    box-shadow: 
        0 4px 8px rgba(0, 0, 0, 0.08),
        0 16px 32px rgba(0, 0, 0, 0.15),
        0 32px 64px rgba(0, 0, 0, 0.12),
        0 64px 128px rgba(0, 0, 0, 0.08);
}

/* Card body styling */
.card-body {
    padding: 45px 40px;
    position: relative;
}

/* Title with elegant styling */
.card-title {
    color: #2d3748;
    font-weight: 700;
    font-size: 28px;
    letter-spacing: -0.5px;
    text-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
    position: relative;
}

/* Add decorative line under title */
.card-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 50px;
    height: 3px;
    background: linear-gradient(135deg, #667eea, #764ba2);
    border-radius: 2px;
    box-shadow: 0 2px 4px rgba(102, 126, 234, 0.3);
}

/* Form controls with enhanced styling */
.form-control {
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 15px 18px;
    font-size: 16px;
    background: #fafbfc;
    transition: all 0.3s ease;
    position: relative;
    
    /* Subtle inner shadow */
    box-shadow: 
        inset 0 1px 3px rgba(0, 0, 0, 0.06),
        0 1px 2px rgba(0, 0, 0, 0.05);
}

.form-control:focus {
    border-color: #667eea;
    background: white;
    outline: none;
    transform: translateY(-1px);
    
    /* Enhanced focus shadow */
    box-shadow: 
        inset 0 1px 3px rgba(0, 0, 0, 0.06),
        0 0 0 4px rgba(102, 126, 234, 0.1),
        0 4px 8px rgba(102, 126, 234, 0.15),
        0 8px 16px rgba(102, 126, 234, 0.1);
}

.form-control::placeholder {
    color: #a0aec0;
    font-weight: 400;
}

/* Position relative containers for error messages */
.position-relative {
    margin-bottom: 25px !important;
}

/* Error message styling */
.text-danger {
    font-size: 13px;
    font-weight: 500;
    text-shadow: 0 1px 2px rgba(220, 38, 38, 0.1);
    animation: fadeInError 0.3s ease-out;
}

@keyframes fadeInError {
    from {
        opacity: 0;
        transform: translateY(-5px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Premium button styling */
.btn-primary {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: none;
    border-radius: 12px;
    padding: 15px 30px;
    font-weight: 600;
    font-size: 16px;
    letter-spacing: 0.5px;
    color: white;
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
    
    /* Button shadow */
    box-shadow: 
        0 2px 4px rgba(102, 126, 234, 0.2),
        0 4px 8px rgba(102, 126, 234, 0.15),
        0 8px 16px rgba(102, 126, 234, 0.1);
}

/* Button hover effect with enhanced shadow */
.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 
        0 4px 8px rgba(102, 126, 234, 0.25),
        0 8px 16px rgba(102, 126, 234, 0.2),
        0 16px 32px rgba(102, 126, 234, 0.15);
}

/* Button active state */
.btn-primary:active {
    transform: translateY(0);
    box-shadow: 
        0 1px 2px rgba(102, 126, 234, 0.2),
        0 2px 4px rgba(102, 126, 234, 0.15);
}

/* Button shine effect */
.btn-primary::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.5s ease;
}

.btn-primary:hover::before {
    left: 100%;
}

/* Link styling */
.card-body a {
    color: #667eea;
    font-weight: 600;
    transition: all 0.2s ease;
    text-shadow: 0 1px 2px rgba(102, 126, 234, 0.1);
    position: relative;
}

.card-body a::after {
    content: '';
    position: absolute;
    bottom: -2px;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(135deg, #667eea, #764ba2);
    transition: width 0.3s ease;
}

.card-body a:hover::after {
    width: 100%;
}

.card-body a:hover {
    color: #5a67d8;
    text-decoration: none !important;
}

/* Responsive adjustments */
@media (max-width: 480px) {
    .card-login {
        margin: 10px !important;
        border-radius: 12px;
        box-shadow: 
            0 1px 3px rgba(0, 0, 0, 0.05),
            0 4px 8px rgba(0, 0, 0, 0.08),
            0 8px 16px rgba(0, 0, 0, 0.06);
    }
    
    .card-body {
        padding: 35px 25px;
    }
    
    .card-title {
        font-size: 24px;
    }
    
    .form-control {
        padding: 12px 15px;
        font-size: 16px; /* Prevents zoom on iOS */
    }
}

/* Card entrance animation */
.card-login {
    animation: cardEntrance 0.8s cubic-bezier(0.25, 0.8, 0.25, 1);
}

@keyframes cardEntrance {
    from {
        opacity: 0;
        transform: translateY(40px) scale(0.95);
        box-shadow: none;
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
        box-shadow: 
            0 2px 4px rgba(0, 0, 0, 0.05),
            0 8px 16px rgba(0, 0, 0, 0.1),
            0 16px 32px rgba(0, 0, 0, 0.08),
            0 32px 64px rgba(0, 0, 0, 0.05);
    }
}

/* Alternative shadow styles (add these classes to .card-login for variations) */

/* Soft glow variant */
.card-login.glow-shadow {
    box-shadow: 
        0 0 20px rgba(102, 126, 234, 0.15),
        0 8px 32px rgba(102, 126, 234, 0.12),
        0 16px 64px rgba(102, 126, 234, 0.08);
}

/* Dramatic depth variant */
.card-login.deep-shadow {
    box-shadow: 
        0 8px 16px rgba(0, 0, 0, 0.1),
        0 20px 40px rgba(0, 0, 0, 0.15),
        0 40px 80px rgba(0, 0, 0, 0.12),
        0 80px 160px rgba(0, 0, 0, 0.08);
}

/* Floating card variant */
.card-login.floating {
    box-shadow: 
        0 25px 50px -12px rgba(0, 0, 0, 0.25),
        0 0 0 1px rgba(255, 255, 255, 0.05);
}
</style>
<section class="content-main mt-80 mb-80">
   <div class="card mx-auto card-login" style="max-width: 400px;margin-top: 100px;">
       <div class="card-body">
           <h4 class="card-title mb-4 text-center">Change Password</h4>
           <form method="post" action="/reset-password" onsubmit="return validateForm()">
               <div class="mb-3 position-relative">
                   <input class="form-control" name="newPass1" id="newPass1" placeholder="Enter new password" type="password" required style="border: 1px solid #ced4da;">
                   <div id="newPass1Error" class="text-danger position-absolute" style="bottom: -20px; left: 0;"></div>
               </div>
               <div class="mb-3 position-relative">
                   <input class="form-control" name="newPass2" id="newPass2" placeholder="Re-enter new password" type="password" required style="border: 1px solid #ced4da;">
                   <div id="newPass2Error" class="text-danger position-absolute" style="bottom: -20px; left: 0;"></div>
               </div>
               <% if (typeof message !== 'undefined') { %>
                <p class="text-danger"><%= message %></p>
              <% } %>
               <div class="mb-4">
                   <button type="submit" class="btn btn-primary w-100">Change Password</button>
               </div>
               
           </form>
           <p class="text-center mt-4">Don't have an account? <a style="text-decoration: none;" href="/signup">Sign up</a></p>
       </div>
   </div>
</section>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script>
function validateForm() {
   let valid = true;
   const newPass1 = document.getElementById('newPass1');
   const newPass2 = document.getElementById('newPass2');
   const newPass1Error = document.getElementById('newPass1Error');
   const newPass2Error = document.getElementById('newPass2Error');


   newPass1Error.textContent = '';
   newPass2Error.textContent = '';


   if (!newPass1.value.trim()) {
       newPass1Error.textContent = 'Password cannot be empty.';
       valid = false;
   } else if (newPass1.value.length < 8) {
       newPass1Error.textContent = 'Password must be at least 8 characters long.';
       valid = false;
   }else if (!/[A-Za-z]/.test(newPass1.value) || !/[0-9]/.test(newPass1.value)) {
    newPass1Error.textContent = 'Password must contain both letters and numbers.';
    valid = false;
} 


   if (!newPass2.value.trim()) {
       newPass2Error.textContent = 'Please re-enter your password.';
       valid = false;
   } else if (newPass2.value !== newPass1.value) {
       newPass2Error.textContent = 'Passwords do not match.';
       valid = false;
   }
   return valid;
}
</script>



