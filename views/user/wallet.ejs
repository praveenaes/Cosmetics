<%- include("../../views/partials/user/header") %>

<link href="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
<style>
  .sidebar {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  }
  .sidebar a {
    color: #333;
    display: block;
    padding: 10px 0;
    text-decoration: none;
  }
  .sidebar a.active {
    color: #ff6600;
  }
  .sidebar a:hover {
    color: #ff6600;
  }
  .sidebar a i {
    margin-right: 10px;
  }
  .main-content {
    background-color: white;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    width: 100%;
  }
  .main-content h2 {
    margin-bottom: 20px;
  }
  .form-group label {
    font-weight: bold;
  }
  .form-group span {
    color: red;
  }
  .btn-orange {
    background-color: #ff6600;
    color: white;
  }
  .btn-orange:hover {
    background-color: #e65c00;
  }
  .btn-blue {
    background-color: #0000ff;
    color: white;
  }
  .btn-blue:hover {
    background-color: #0000cc;
  }
  .photo img {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    margin-right: 10px;
  }

  #coupons-title {
    color: #1e3a8a;
    font-size: 1.125rem;
    font-weight: bold;
    margin-bottom: 16px;
  }
  .coupon {
    background-color: #d1fae5;
    padding: 24px;
    border-radius: 8px;
    margin-bottom: 16px;
  }
  .coupon h2 {
    font-size: 1.125rem;
    font-weight: bold;
    margin: 0;
    display: flex;
    align-items: center;
  }
  .coupon h2 span {
    margin-right: 8px;
  }
  .coupon p {
    color: #4b5563;
    margin: 8px 0 16px;
  }
  .coupon .input-group {
    display: flex;
  }
  .coupon input {
    border: 1px solid #d1d5db;
    border-radius: 4px 0 0 4px;
    padding: 8px;
    flex-grow: 1;
    outline: none;
  }
  .coupon button {
    background-color: #1f2937;
    color: white;
    border: none;
    border-radius: 0 4px 4px 0;
    padding: 8px 16px;
    cursor: pointer;
  }

  .unique-container {
    max-width: 100%;
    margin: 0 auto;
    background-color: #ffffff;
    padding: 24px;
    border-radius: 8px;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
  .unique-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 16px;
  }
  .unique-balance-card {
    padding: 16px;
    border-radius: 8px;
    text-align: center;
    color: #ffffff;
  }
  .available {
    padding: 50px;
    border-radius: 18px;
    text-align: center;
    color: #ffffff;
  }
  .unique-balance-card.available {
    background-color: #4a5568;
  }
  .unique-balance-card.reward {
    background-color: #48bb78;
  }
  .unique-balance-card.pending {
    background-color: #f56565;
  }
  .unique-balance-card p {
    margin: 0;
  }
  .unique-balance-card .amount {
    font-size: 2rem;
    font-weight: 700;
  }
  .wallet-action-button {
    display: inline-block;
    padding: 12px 24px;
    background-color: #4a5568;
    color: white;
    text-decoration: none;
    border-radius: 8px;
    transition: all 0.3s ease;
    margin-right: 10px;
    margin-bottom: 10px;
    cursor: pointer;
  }
  .wallet-action-button:hover {
    background-color: #2d3748;
    color: white;
    transform: translateY(-2px);
  }
  .quick-amount {
    display: inline-block;
    padding: 10px 20px;
    margin: 5px;
    border: 2px solid #4a5568;
    border-radius: 6px;
    cursor: pointer;
    transition: all 0.3s ease;
  }
  .quick-amount:hover {
    background: #4a5568;
    color: white;
  }
  .transaction-status {
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.875rem;
  }
  .status-credit {
    background-color: #48bb78;
    color: white;
  }
  .status-debit {
    background-color: #f56565;
    color: white;
  }
  
  /* Responsive styles */
  @media (max-width: 992px) {
    .unique-container {
      padding: 16px;
    }
    .available {
      padding: 30px;
    }
    .unique-balance-card .amount {
      font-size: 1.75rem;
    }
  }
  
  @media (max-width: 768px) {
    .wallet-action-button {
      padding: 10px 16px;
      display: block;
      width: 100%;
      margin-right: 0;
      text-align: center;
    }
    .available {
      padding: 25px;
    }
    .quick-amount {
      width: calc(50% - 10px);
      text-align: center;
      margin: 5px;
    }
  }
  
  @media (max-width: 576px) {
    .unique-container {
      padding: 12px;
    }
    .available {
      padding: 20px;
    }
    .unique-balance-card .amount {
      font-size: 1.5rem;
    }
    .unique-transaction-table {
      font-size: 0.85rem;
    }
    .transaction-status {
      padding: 2px 4px;
      font-size: 0.75rem;
    }
    .pagination {
      font-size: 0.85rem;
    }
  }
  
  /* Make table responsive */
  .table-responsive {
    width: 100%;
    overflow-x: auto;
  }
</style>


<div class="container-fluid">
  <div>
    <%- include("../../views/partials/user/sidebar") %>
  <div class="row">
    
 
    <!-- Main Content -->
    <div class="col-12 main-content" style="margin-top: 30px;" >
      <div class="unique-container" style="margin-left:270px;margin-top: 0px;" >
        <h2 class="unique-title">Wallet & Transactions</h2>
        <div class="row mb-4">
          <div class="col-md-6 col-lg-4 mb-3">
            <div id="add-money-button" class="unique-balance-card available">
              <p class="amount" style="color: white;" >
                ₹
                <%if(wallet.balance){%>
                <span id="availableBalance">
                  <%= wallet.balance.toFixed(2) %></span>
                <%}else{%>
                    <span id="availableBalance"
                  >0</span>
                    <%}%>
              </p>
              <p>Available Balance</p>
            </div>
          </div>
        </div>
        <div class="unique-button-group mb-4">
          <button
            class="wallet-action-button"
            data-bs-toggle="modal"
            data-bs-target="#addMoneyModal"
          >
            <i class="fas fa-plus-square"></i> Add Balance
          </button>
          <button
            class="wallet-action-button"
            data-bs-toggle="modal"
            data-bs-target="#withdrawModal"
          >
            <i class="fas fa-minus-square"></i> Withdraw
          </button>
        </div>
        <div class="unique-transaction-history">
          <h3>Transaction History</h3>
          <div class="table-responsive">
            <table class="table unique-transaction-table">
              <thead>
                <tr>
                  <th>Amount</th>
                  <th>Purpose</th>
                  <th>Date</th>
                  <th>Type</th>
                </tr>
              </thead>
              <tbody>
                  <% if(transactions && transactions.length > 0) { %>
                <%transactions.forEach((transaction)=>{%> 
                  
                <tr>
                  <td>₹<%= transaction?.amount.toFixed(2) %></td>
                  <td><%= transaction.description %></td>
                  <td>
                    <%= new Date(transaction.date).toLocaleDateString() %>
                  </td>
                  <td>
                    <span
                      class="transaction-status <%= transaction.type === 'credit' ? 'status-credit' : 'status-debit' %>"
                    >
                      <%= transaction.type.charAt(0).toUpperCase() +
                      transaction.type.slice(1) %>
                    </span>
                  </td>
                </tr>
                <%})%>
                <% } else { %>
                <tr>
                  <td colspan="4" class="text-center">No transactions found</td>
                </tr>
                <% } %> 
              </tbody>
            </table>
          </div>
          <div class="pagination-container d-flex justify-content-center mt-4 mb-4">
            <nav aria-label="Page navigation">
              <ul class="pagination pagination-sm flex-wrap">
                <% if (currentPage > 1) { %>
                <li class="page-item">
                  <a href="?page=<%= currentPage - 1 %>" class="page-link">&laquo; Previous</a>
                </li>
                <% } %>
                
                <!-- Always show first page -->
                <li class="page-item <%= currentPage === 1 ? 'active' : '' %>">
                  <% if (currentPage === 1) { %>
                    <span class="page-link">1</span>
                  <% } else { %>
                    <a href="?page=1" class="page-link">1</a>
                  <% } %>
                </li>
                
                <!-- Show ellipsis after page 1 if necessary -->
                <% if (currentPage > 2 && totalPages > 3) { %>
                  <li class="page-item disabled">
                    <span class="page-link">...</span>
                  </li>
                <% } %>
                
                <!-- Show current page if it's not 1 and not the last page -->
                <% if (currentPage !== 1 && currentPage !== totalPages) { %>
                  <li class="page-item active">
                    <span class="page-link"><%= currentPage %></span>
                  </li>
                <% } else if (totalPages > 1 && currentPage !== 2) { %>
                  <li class="page-item">
                    <a href="?page=2" class="page-link">2</a>
                  </li>
                <% } else if (totalPages > 1) { %>
                  <li class="page-item active">
                    <span class="page-link">2</span>
                  </li>
                <% } %>
                
                <!-- Show ellipsis before last page if necessary -->
                <% if (currentPage < totalPages - 1 && totalPages > 3) { %>
                  <li class="page-item disabled">
                    <span class="page-link">...</span>
                  </li>
                <% } %>
                
                <!-- Show last page if total pages > 1 -->
                <% if (totalPages > 1) { %>
                  <li class="page-item <%= currentPage === totalPages ? 'active' : '' %>">
                    <% if (currentPage === totalPages) { %>
                      <span class="page-link"><%= totalPages %></span>
                    <% } else { %>
                      <a href="?page=<%= totalPages %>" class="page-link"><%= totalPages %></a>
                    <% } %>
                  </li>
                <% } %>
                
                <% if (currentPage < totalPages) { %>
                <li class="page-item">
                  <a href="?page=<%= currentPage + 1 %>" class="page-link">Next &raquo;</a>
                </li>
                <% } %>
              </ul>
            </nav>
          </div>
          </div>
        </div>
      </div>
    </div>
    </div>
  </div>
</div>

<!-- Add Money Modal -->
<div class="modal fade" id="addMoneyModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header py-2">
        <h5 class="modal-title">Add Money to Wallet</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body p-3">
        <div class="mb-3">
          <div class="input-group">
            <span class="input-group-text">₹</span>
            <input
              type="number"
              id="amount"
              class="form-control form-control-lg w-100 text-center"
              placeholder="Enter Amount"
              min="1"
              step="1"
              aria-label="Amount to add"
            />
          </div>
          <div id="amount-error-message" class="text-danger mt-1 small" style="display: none; color: red;"></div>
        </div>
        <div class="d-flex flex-wrap justify-content-center gap-2 mb-3">
          <button class="btn btn-outline-primary quick-amount" onclick="setAmount(1000)">₹1000</button>
          <button class="btn btn-outline-primary quick-amount" onclick="setAmount(5000)">₹5000</button>
          <button class="btn btn-outline-primary quick-amount" onclick="setAmount(10000)">₹10000</button>
          <button class="btn btn-outline-primary quick-amount" onclick="setAmount(20000)">₹20000</button>
        </div>
      </div>
      <div class="modal-footer py-2 d-flex justify-content-between">
        <button type="button" class="btn btn-sm btn-danger" data-bs-dismiss="modal">
          Cancel
        </button>
        <button
          type="button"
          class="btn btn-sm btn-primary"
          id="payButton"
          onclick="addMoney()"
        >
          Proceed to Pay
        </button>
      </div>
    </div>
  </div>
</div>
<!-- Withdraw Money Modal -->
<div class="modal fade" id="withdrawModal" tabindex="-1">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header py-2">
        <h5 class="modal-title">Withdraw Money</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <div class="modal-body p-3">
        <div class="mb-3">
          <label for="withdrawAmount" class="form-label small mb-1"
            >Enter Amount to Withdraw</label
          >
          <div class="input-group">
            <span class="input-group-text">₹</span>
            <input
              type="number"
              id="withdrawAmount"
              class="form-control w-100"
              min="1"
              step="0.01"
              placeholder="0.00"
              aria-label="Amount to withdraw"
            />
          </div>
          <!-- Error message will appear here -->
          <div id="withdraw-error-message" class="text-danger mt-1 small" style="display: none; color: red;"></div>
        </div>
      </div>
      <div class="modal-footer py-2 d-flex justify-content-between">
        <button type="button" class="btn btn-sm btn-secondary" data-bs-dismiss="modal">
          Cancel
        </button>
        <button type="button" class="btn btn-sm btn-primary" id="withdrawButton">
          Withdraw
        </button>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
  function setAmount(amount) {
    document.getElementById("amount").value = amount;
  }

  async function addMoney() {
  const amount = document.getElementById("amount").value;
  const errorMessageElement = document.getElementById("amount-error-message");
  
  if (!amount || amount <= 0) {
    errorMessageElement.textContent = "Please enter a valid amount.";
    errorMessageElement.style.display = "block";
    return;
  }
  
  // Hide error message if amount is valid
  errorMessageElement.style.display = "none";

  // Create Order from Backend
  const response = await fetch("/wallet/createOrder", {
    method: "POST",
    headers: { "Content-Type": "application/json" },
    body: JSON.stringify({ amount }),
    
  });

  const order = await response.json();

  const options = {
    key: "<%= process.env.RAZORPAY_KEY_ID %>",
    amount: order.amount,
    currency: "INR",
    name: "Women Fashion Wallet",
    description: "Wallet Top-Up",
    order_id: order.id,
    handler: async function (response) {
      const verifyRes = await fetch("/wallet/verifyPayment", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({
          razorpay_order_id: response.razorpay_order_id,
          razorpay_payment_id: response.razorpay_payment_id,
          razorpay_signature: response.razorpay_signature,
          amount: amount,
        }),
      });

      const result = await verifyRes.json();
      if (result.success) {
        Swal.fire({
          title: "Success!",
          text: "Wallet Recharged Successfully!",
          icon: "success",
          confirmButtonText: "OK",
        }).then(() => {
          location.reload(); 
        });
      } else {
        Swal.fire({
          title: "Error!",
          text: "Payment Verification Failed",
          icon: "error",
          confirmButtonText: "Try Again",
        });
      }
    },
    prefill: {
      email: "<%= user.email %>",
      contact: "<%= user.phone %>",
    },
    theme: { color: "#3399cc" },
  };

  const paymentObject = new Razorpay(options);
  paymentObject.open();
}
  document
    .getElementById("withdrawButton")
    .addEventListener("click", async () => {
      const amountInput = document.getElementById("withdrawAmount");
      const amount = amountInput.value;
      const errorMsgElement = document.getElementById("withdraw-error-message");
      
      // Clear previous error message
      if (errorMsgElement) {
        errorMsgElement.textContent = "";
        errorMsgElement.style.display = "none";
      }

      if (!amount || amount < 1) {
        // Show error message instead of alert
        if (!errorMsgElement) {
          const errorMsg = document.createElement("div");
          errorMsg.id = "withdraw-error-message";
          errorMsg.className = "text-danger mt-1 small";
          errorMsg.textContent = "Please enter a valid amount";
          errorMsg.style.color = "red";
          amountInput.parentNode.parentNode.appendChild(errorMsg);
        } else {
          errorMsgElement.textContent = "Please enter a valid amount";
          errorMsgElement.style.display = "block";
        }
        return;
      }

      try {
        const response = await fetch("/wallet/withdrawMoney", {
          method: "PUT",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({ amount }),
        });

        const data = await response.json();

        if (data.success) {
          Swal.fire({
            title: "Success!",
            text: "Money withdrawn successfully!",
            icon: "success",
            confirmButtonText: "OK",
            timer:5000,
            timerProgressBar: true,
          }).then((result) => {
            if (result.isConfirmed) {
              window.location.reload();
            }
          });
        } else {
          Swal.fire({
            title: "Error!",
            text: data.message || "Failed to withdraw money. Please try again.",
            icon: "error",
            confirmButtonText: "OK",
            timer:5000,
            timerProgressBar: true,
          });
        }
      } catch (error) {
        console.error("Error:", error);
        Swal.fire({
            title: "Error!",
            text: "Failed to withdraw money. Please try again.",
            icon: "error",
            confirmButtonText: "OK",
            timer:5000,
            timerProgressBar: true,
          });
      }
    });
</script>

</body>
</html>